A friend class can access private and protected members of other classes 
in which it is declared as a friend. It is sometimes useful to allow a particular 
class to access private and protected members of other classes. For example, 
a LinkedList class may be allowed to access private members of Node.

It's a flaw=in C++

We can declare a friend class in C++ by using the friend keyword.

Syntax:

friend class class_name;    // declared in the base class

class ABC{
    //body

    friend class XYZ;
}

class XYZ{
    //can access private and publi members of ABC
}

Friend Function
Like a friend class, a friend function can be granted special access to private and protected members of a class in C++. 
They are not the member functions of the class but can access and manipulate the private and protected members 
of that class for they are declared as friends.

A friend function can be:

A global function
A member function of another class

friend return_type function_name (arguments);    // for a global function
            or
friend return_type class_name::function_name (arguments);    // for a member function of another class
https://drive.google.com/file/d/1R57cdqoJc_WZwtO-TI6R7_KsPEuslwH-/view

https://www.geeksforgeeks.org/problems/counting-elements-in-two-arrays/1?page=1&category%5B%5D=Binary%2520Search&sortBy=submissions

#include <bits/stdc++.h>
using namespace std;

int main() {
	
	// ip
	int m, n;  cin>>m>>n;
	
	vector<int> arr1;
	for(int i=0; i<m; i++) {
		int temp; cin>>temp;
		
		arr1.push_back(temp);
	}
	
		vector<int> arr2;
	for(int i=0; i<n; i++) {
		int temp; cin>>temp;
		
		arr2.push_back(temp);
	}
	// ******************************************************************************* //
	
	
	vector<int> ans;
    
    sort(arr2.begin(), arr2.end()); 
    
    for(int i=0; i<m; i++) {
        
        int idx = upper_bound(arr2.begin(), arr2.end(), arr1[i]) - arr2.begin(); 
        
        // definition of upper bound --> points to the iterator having no. > x for 
        // which we are iterating
        
        idx--;
        
        ans.push_back(idx-0+1);
    }
    
    for(int i=0; i<ans.size(); i++) cout<<ans[i]<<" ";
	
	return 0;
}


java
import java.uti.*;
import java.io.*;


class Solution
{
    public static ArrayList<Integer> countEleLessThanOrEqual(int arr1[], int arr2[], int m, int n)
    {
       Arrays.sort(arr2);
       ArrayList<Integer>ans=new ArrayList<>();
       for(int i=0;i<arr1.length;i++)
       {
           int count=0;
           int target=arr1[i];
           int lo=0;
           int hi=arr2.length-1;
           while(lo<=hi)
           {
               int mid=(lo)+(hi-lo)/2;
               if(arr2[mid]==target)
               {
                   count=count+mid-lo+1;
                   lo=mid+1;
               }
               else if(arr2[mid]<target)
               {
                   count+=mid-lo+1;
                   lo=mid+1;
               }
               else{
                   if(arr2[mid]>target)
                   {
                       hi=mid-1;
                   }
               }
           }
           ans.add(count);
       }
       return ans;
    }
}

py
def countEleLessThanOrEqual(arr1,n1,arr2,n2):
    def searchLast(arr,target) :
        l = 0
        r = len(arr)-1
        while(l <= r) :
            mid = (l+r)//2
            if(arr[mid] == target) :
                l = mid+1
            elif(arr[mid] > target) :
                r = mid-1
            else :
                l = mid+1
        return r+1
    ans = []
    arr2.sort()
    for i in arr1 :
        ans.append(searchLast(arr2,i))
    return ans
n1 = int(input())
n2 = int(input())
arr1 = list(map(int,input().split()))
arr2 = list(map(int,input().split()))
print(countEleLessThanOrEqual(arr1,n1,arr2,n2))
